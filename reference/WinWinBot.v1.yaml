openapi: 3.0.0
info:
  title: WinWinBot
  version: '1.0'
  description: "#### To use the basic api endpoints, you need to authorize through **Login** endpoint and get your OAuth params:\n  - ##### token_type\n  - ##### token\n\n#### These parameters will need to be attached to each request in the headers with parameter name **authorization**. There must be a space between these parameters.\n\n### Example: \n  - ##### token_type: Bearer  \n  - ##### token: 123 \n  - ##### authorization: Bearer 123\n\n\n\n\n\n\n\n\n\n\n\n\n"
servers: []
paths:
  /auth/login:
    post:
      summary: Login
      tags:
        - auth
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      token:
                        type: string
                      token_type:
                        type: string
                      user:
                        $ref: ../models/user/User.v1.yaml
                    required:
                      - token
                      - token_type
                      - user
                  - type: string
              examples: {}
      operationId: post-auth-login
      parameters:
        - schema:
            type: string
            maxLength: 255
          in: query
          name: email
          required: true
        - schema:
            type: string
            minLength: 8
            maxLength: 255
          in: query
          name: password
          required: true
          description: ''
        - schema:
            type: boolean
          in: query
          name: api
          description: |-
            If is true, then response is object with token params.
            Else - url for frontend authorization.
      description: '### Endpoint for authorization.'
  /auth/logout:
    get:
      summary: Logout
      tags:
        - auth
      responses: {}
      operationId: get-auth-logout
      security:
        - OAuth: []
      description: "### Endpoint for deactivation current token. \n\n#### After success logout you will be redirected to \"home\" page."
  '/chat/{chat_id}/subscribers':
    parameters:
      - schema:
          type: integer
        name: chat_id
        in: path
        required: true
    get:
      summary: Subscriber Get
      tags:
        - chat
        - subscriber
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - properties:
                      count:
                        type: integer
                      count_word:
                        type: string
                      chat:
                        $ref: ../models/chat/ChatShort.v1.yaml
                  - properties:
                      items:
                        type: array
                        items:
                          allOf:
                            - $ref: ../models/chat/subscriber/ChatSubscriber.v1.yaml
                      chat:
                        $ref: ../models/chat/ChatShort.v1.yaml
                type: object
        '':
          description: ''
      operationId: get-chat-chat_id-subscribers
      parameters:
        - schema:
            type: integer
            minimum: 1
          in: query
          name: id
          description: Get subscriber with the specified ID
        - schema:
            type: integer
            minimum: 1
            maximum: 2
          in: query
          name: type_id
          description: |-
            Get subscribers with the specified TYPE_ID.

            More information on this option is available in the "ChatSubscriber" model.
        - schema:
            type: integer
            minimum: 1
          in: query
          name: filter_id
          description: Get subscribers from the specified filter
        - schema:
            type: boolean
          in: query
          name: count
          description: Get the number of subscribers
        - schema:
            type: string
          in: query
          name: search
          description: 'Get subscribers whose fields (first_name, last_name, username) contain this param'
        - schema:
            type: integer
            maximum: 10000
            minimum: 1
          in: query
          name: limit
          description: Limit number of returned subscribers
        - schema:
            type: boolean
          in: query
          name: with_trashed
          description: Get also unsubscribed subscribers
        - schema:
            type: boolean
          in: query
          name: with_chat
          description: Append ChatShort model to response
        - schema:
            type: string
          in: header
          name: i18n-lang
          description: "For a query with the \"count\" parameter, you can specify the language (ru, en, es, hu) of declining the number of subscribers. \n\nDefault lang is \"en\"."
      requestBody: {}
      security:
        - OAuth: []
      description: '### Endpoint is used to get ChatSubscriber models from a specific chat-bot.'
  '/chat/{chat_id}/subscribers/{subscriber_id}':
    parameters:
      - schema:
          type: integer
        name: chat_id
        in: path
        required: true
      - schema:
          type: integer
        name: subscriber_id
        in: path
        required: true
    put:
      summary: Subscriber Update
      tags:
        - chat
        - subscriber
      responses:
        '200':
          description: Updated ChatSubscriber model
          content:
            application/json:
              schema:
                $ref: ../models/chat/subscriber/ChatSubscriber.v1.yaml
      operationId: put-chat-chat_id-subscribers-subscriber
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                info:
                  type: array
                  items:
                    allOf:
                      - $ref: ../models/chat/subscriber/ChatSubscriberInfo.v1.yaml
              required:
                - info
        description: ' '
      description: '### Endpoint is used to update "info" fields of specific ChatSubscriber model.'
    delete:
      summary: Subscriber Delete
      tags:
        - chat
        - subscriber
      responses:
        '200':
          description: Updated ChatSubscriber model
          content:
            application/json:
              schema:
                $ref: ../models/chat/subscriber/ChatSubscriber.v1.yaml
      operationId: delete-chat-chat_id-subscribers-subscriber
      description: '### Endpoint is used to delete from testers ChatSubscriber model.'
components:
  schemas: {}
  securitySchemes:
    OAuth:
      name: authorization
      type: apiKey
      in: header
